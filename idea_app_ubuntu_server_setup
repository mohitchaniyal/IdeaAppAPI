sudo apt update && sudo apt upgrade -y

# install pip
sudo apt install python3-pip -y 

sudo apt install wget ca-certificates

#instaling postgresql 

wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
sudo apt update
apt install postgresql postgresql-contrib
sudo apt install postgresql postgresql-contrib
service postgresql status


# accesing db
psql --version
sudo su
su postgres
psql 
\password postgres

# config postgres

cd /etc/postgresql/16/main/

sudo vi postgresql.conf 
 
add 
#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# - Connection Settings -
listen_addresses = '*'  #listen to all address


sudo vi pg_hba.conf 

add 
# Database administrative login by Unix domain socket
local   all             postgres                                md5 # change pear auth to password auth

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   all             all                                     md5
# IPv4 local connections:
host    all             all             0.0.0.0/0               md5 # all remote connections
# IPv6 local connections:
host    all             all             ::/0                    md5 # allow remote connection


sudo systemctl restart postgresql

psql -U postgres 

Enter Firewall rule in Azure Network setting to connect to postgresql port

Connect using Dbeaver.

#give a user root access

usermod -aG sudo mohitchaniyal


mkdir app
cd app/

sudo apt install python3.8-venv
python3 -m venv .env
mkdir src
cd src/
git clone https://github.com/mohitchaniyal/IdeaAppAPI.git . #clone to current wihtout having the repo name
sudo apt-get install libpq-dev -y
pip install -r requirements.txt
pip install psycopg2-binary

run app
allow port 8000 in azure netowork
uvicorn --host 0.0.0.0  main:app

using gunicorn
gunicorn -w 4 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:8000

creating ideaapp.service

[Unit]
Description=Idea App
After=network.target

[Service]
user=ideaapp
group=ideaapp
WorkingDirectory=/home/mohitchaniyal/app/src
Enviroment="PATH=/home/mohitchaniyal/app/.env/bin"
ExecStart=/home/mohitchaniyal/app/.env/bin/gunicorn -w 4 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:8000

[Install]
WantedBy=multi-user.target

sudo systemctl start ideaapp.service

sudo systemctl status ideaapp.service

sudo systemctl enable ideaapp.service


NGINX setup
sudo apt install nginx
sudo systemctl start nginx
cd /etc/nginx/sites-available/

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _; # replace with specific domain name like sanjeev.com
        
        location / {
                proxy_pass http://localhost:8000;
                proxy_http_version 1.1;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_redirect off;
        }

}


Domain setup

Add A make vm ip to static ,  add A record for domain to ip maping in domain provider portal

setting up SSL

sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo certbot --nginx
#add email and domain name
#allow https from azure firewalll

setting up a firewalll

sudo ufw enable
sudo ufw allow http
sudo ufw allow https
sudo ufw allow ssh
sudo ufw allow 5432
sudo ufw status

sudo ufw delete allow http